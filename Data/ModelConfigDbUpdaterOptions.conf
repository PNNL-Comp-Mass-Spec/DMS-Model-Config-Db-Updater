# Directory with the DMS model config database files to update
# The SQLite files should have the extension .db
InputDirectory=.

# Filter for the model config databases to process, e.g. dataset*.db
FilenameFilter=analysis

# Directory to write updated files
# Treated as a path relative to the input files if not rooted
# If an empty string, updates files in-place
OutputDirectory=UpdatedFiles

# View column map file (typically created by PgSqlViewCreatorHelper.exe)
# Tab-delimited file with three columns:
# View  SourceColumnName  NewColumnName
ViewColumnMap=DMS5_views_excerpt_RenamedColumns.txt

# Text file with table names (one name per line) used to track renamed tables
# (typically sent to DB_Schema_Export_Tool.exe via the DataTables parameter when using the ExistingDDL option to pre-process a DDL file prior to calling sqlserver2pgsql.pl)
# Tab-delimited file that must include columns SourceTableName and TargetTableName
TableNameMap=DMS5_Tables.tsv

# When true, show changes that would be made, but do not update any files
PreviewUpdates=False

# When true, show fewer messages
QuietMode=True

# When true, rename the list report view and columns
# View renames will either be based on data loaded from the table name map file, or by converting to snake case
# Column renames are based on data loaded from the view column map file, optionally replacing spaces with underscores if the name is not defined in the map file
RenameListReportView=False

# When true, rename the detail report view and columns
RenameDetailReportView=False

# When true, rename the entry page view and columns
# This also updates form field names in the model config DB tables, since form fields match the entry page view's column names
RenameEntryPageView=True

# When true, rename the referenced stored procedures to use snake case (does not change argument names)
RenameStoredProcedures=False

# When true, snake case any view name that was not loaded from the View column map file
RenameUndefinedViews=True

# When true, replace spaces in column names with underscores
ReplaceSpacesWithUnderscores=False

# When true, snake case any column names that are not defined in the View column map file
SnakeCaseColumnNames=True

# When true, change column names to lowercase (if not defined in the View column map file)
# When true, also update list report and detail report hotlinks
ChangeColumnNamesToLowerCase=True

# When false, quote names with double quotes (PostgreSQL compatible)
# When true, quote names with square brackets (SQL Server compatible)
QuoteWithSquareBrackets=True

# When true, look for columns that start with # and convert them to list report hotlink type no_display
# In addition, remove the # sign from the name
ConvertHiddenColumnsToNoDisplay=False

# When true, if the object name does not already have a schema and the db_group for the page family is defined, preface object names with the Postgres schema that applies to the database group
# This should only be set to true if the DMS website is now retrieving data from Postgres and schema names need to be added to page families
# This should also be set to true when ValidateColumnNames is true and using a PostgreSQL database server
UsePostgresSchema=False

# When true, read column names used in each SQLite file and validate against the column names in the source tables or views for list reports, detail reports, and entry pages
# When this is true, the name map files are not loaded, and no object renaming is performed
ValidateColumnNames=False

# Server name to contact to validate form field names against columns in tables or views
# Assumed to be SQL Server if UsePostgresSchema is false; otherwise, assumes PostgreSQL
DatabaseServer=

# When true, use the development databases instead of the production databases (only applicable for SQL Server)
UseDevelopmentDatabases=False

# When true, ignore errors while validating model config DBs (errors will be reported, but all config DBs will be validated)
ValidateColumnNamesIgnoreErrors=False

# When true, save the validation results to a text file
SaveValidationResults=False

# Validation results file name or path
ValidationResultsFileName=ValidationResults.txt
